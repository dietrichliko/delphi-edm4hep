---
schema_version: 1

options:
  getSyntax: True
  exposePODMembers: False
  includeSubfolder: True

components:
  # Vector3D with floats
  delphi::Vector3f:
    Members:
      - float x
      - float y
      - float z
    ExtraCode:
      declaration: |
        constexpr Vector3f() : x(0),y(0),z(0) {}
        constexpr Vector3f(float xx, float yy, float zz) : x(xx),y(yy),z(zz) {}
        constexpr Vector3f(const float* v) : x(v[0]),y(v[1]),z(v[2]) {}
        constexpr bool operator==(const Vector3f& v) const { return (x==v.x&&y==v.y&&z==v.z) ; }
        constexpr float operator[](unsigned i) const { return *( &x + i ) ; }

  delphi::TimeStamp:
    Members:
      - std::uint64_t unixTime // Unix timestamp in seconds since epoch

datatypes:

  delphi::EventHeader:
    Description: "DELPHI-specific event header with extended metadata"
    Author: "Dietrich Liko <Dietrich.Liko@oeaw.ac.at>"
    Members:
      - std::uint32_t eventNumber // Event number within the run
      - std::uint32_t runNumber   // Run number  
      - std::uint32_t fileNumber  // File number within the run
      - delphi::TimeStamp timeStamp // Event timestamp
      - std::uint32_t delphiDate  // Original DELPHI date format (YYMMDD)
      - std::uint32_t delphiTime  // Original DELPHI time format (HHMMSS)

  delphi::RunHeader:
    Description: "DELPHI-specific run header information"
    Author: "Dietrich Liko <Dietrich.Liko@oeaw.ac.at>"
    Members:
      - std::uint32_t experimentNumber // Experiment number (always 1000 for DELPHI)
      - std::uint32_t runNumber     // Run number
      - std::uint32_t fileNumber    // File number within the run
      - std::uint32_t fillNumber    // LEP fill number
      - std::uint32_t startTime     // Run start time (Unix timestamp)
      - std::uint32_t endTime       // Run end time (Unix timestamp)
      - float beamEnergy            // LEP beam energy in GeV
      - delphi::Vector3f beamSpot   // Beam spot position
